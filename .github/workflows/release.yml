name: Release

on:
  push:
    tags:     # Sequence of patterns matched against refs/tags
      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        target: [ x86_64-unknown-linux-gnu, x86_64-apple-darwin ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      - name: Build
        run: cargo build --release --all-features
      - name: Package release
        run: tar -zcvf psctl-${{ github.ref_name }}-${{ matrix.target }}.tgz target/release/psctl

  release:
    needs: [ build ]
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

  package:
    needs: [ release ]
    name: Package Release
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        target: [ x86_64-unknown-linux-gnu, x86_64-apple-darwin ]
    steps:
      - name: Upload artifact
        id: upload_artifact_${{ matrix.target }}
        uses: actions/upload-release-asset@v1
        env: # GITHUB_TOKEN must be given write permission in Repo > Settings > Actions
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: psctl-${{ github.ref_name }}-${{ matrix.target }}.tgz
          asset_name: psctl-${{ github.ref_name }}-${{ matrix.target }}.tgz
          asset_content_type: application/x-tgz
